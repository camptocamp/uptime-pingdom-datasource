{"version":3,"sources":["../src/datasource.js"],"names":["GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","credentials","username","jsonData","password","apiKey","options","buildQueryParameters","then","query","targets","filter","t","hide","from","range","clone","to","retrieveStats","unix","targets_promises","forEach","targetValue","targetIndex","targetArray","params","promise","callApi","checkID","results","totalup","response","data","summary","status","totaldown","checkName","push","Promise","all","console","log","description","endpoint","method","body","datasourceRequest","headers","btoa","message","title","catch","e","statusText","rawTargets","resolve","reject","promises","target","index","array","filterType","filterValue","refId","checks","value","id","bind","_","undefined","buildTargetsList","result","getCheckDetails","legendFormat"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n\n    this.credentials = {\n      username: instanceSettings.jsonData.username,\n      password: instanceSettings.jsonData.password,\n      apiKey: instanceSettings.jsonData.apiKey,\n    };\n\n  }\n\n  query(options) {\n    return this.buildQueryParameters(options).then(query => {\n      query.targets = query.targets.filter(t => !t.hide);\n      let from = options.range.from.clone();\n      let to = options.range.to.clone();\n      return this.retrieveStats(query.targets, from.unix(), to.unix());\n    });\n  }\n\n  retrieveStats(targets, from, to) {\n    var targets_promises = [];\n\n    targets.forEach((targetValue, targetIndex, targetArray) => {\n      let params = \"includeuptime=true&from=\"+from+\"&to=\"+to;\n      const promise = this.callApi(\"/summary.average/\" + targetValue.checkID + \"?\" + params, \"GET\")\n        .then(response => {\n          let results = {\n            \"data\": []\n          };\n\n          let totalup = response.data.summary.status.totalup;\n          let totaldown = response.data.summary.status.totaldown;\n\n          return { \"target\": targetValue.checkName, \"datapoints\": [[ totalup/(totalup + totaldown)*100, to ]] }\n        });\n      targets_promises.push(promise);\n    });\n\n    return Promise.all(targets_promises).then(targets => {\n      console.log(targets);\n      return {\n        \"data\": targets,\n      };\n    });\n  }\n\n  getCheckDetails(checkID) {\n    return this.callApi(\"/checks/\" + checkID, \"GET\")\n    .then(response => {\n      return response.data.description;\n    });\n  }\n\n  callApi(endpoint, method, body = \"\") {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + endpoint,\n      method: method,\n      headers: {\n        'Content-Type': 'application/json',\n        'App-Key': this.credentials.apiKey,\n        'Authorization': 'Basic ' + btoa(this.credentials.username + ':' + this.credentials.password),\n      },\n    })\n    .then(response => {\n      return response;\n   });\n  }\n\n  testDatasource() {\n    return this.callApi(\"/checks\", \"GET\")\n      .then(response => {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      })\n      .catch(e => {\n        console.log(e);\n        return { status: \"error\", message: e.status + \" \" + e.statusText + \" - \" + e.data.message, title: \"Error\" };\n     });\n  }\n\n  buildTargetsList(rawTargets) {\n    return this.q(function(resolve, reject) {\n      var promises = [];\n      var targets = [];\n      rawTargets.forEach((target, index, array) => {\n        switch(target.filterType) {\n          case 'Check ID':\n            targets.push({\n              target: target.filterValue,\n              refId: target.refId,\n              hide: target.hide,\n              type: target.type || 'timeserie',\n              checkID: target.filterValue,\n              checkName: \"\",\n            });\n          case 'Tag':\n            const promise = this.callApi(\"/checks?tags=\"+target.filterValue, \"GET\").then(response=> {\n              response.data.checks.forEach((value, index, array) => {\n              targets.push({\n                  target: value.id,\n                  refId: target.refId,\n                  hide: target.hide,\n                  type: target.type || 'timeserie',\n                  checkID: value.id,\n                  checkName: value.name,\n                });\n              });\n            });\n            promises.push(promise);\n        }\n        resolve(Promise.all(promises).then(function(){\n          return targets;\n        }));\n      });\n    }.bind(this));\n  }\n\n  buildQueryParameters(options) {\n    //remove placeholder targets\n    options.targets = _.filter(options.targets, target => {\n      return target.filterValue !== undefined;\n    });\n\n    var promises = [];\n    return this.buildTargetsList(options.targets).then(result => {\n      result.forEach((value, index, array) => {\n        const promise = this.getCheckDetails(value.checkID).then(name => {\n          var target = value\n          target.name = name\n          target.legendFormat = name\n          return target;\n        });\n        promises.push(promise);\n      });\n\n      return Promise.all(promises).then(targets => {\n        options.targets = targets; \n        return options;\n      });\n    });\n  }\n}\n"]}